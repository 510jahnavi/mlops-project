# Name of the git hub action
name: Airflow Server and Script Changes

# Trigger conditions
# on push or pull on branches, folders, files etc
on:
  push:
    branches:
      - aakash_dev
      # - rajat_dev
      # - amogha_dev
      # - jahnavi_dev
      # - nikhil_dev
      # - samanvya_dev
      # - dev
    paths:
      - 'dags/**'
      - 'airflow-config/docker-compose.yaml'

# Setting the environement for the GCP cloud engine that it is gonna talk to 
env:
  PROJECT_ID: ${{secrets.AIRFLOW_GCP_PROJECT_ID}}
  GCE_INSTANCE: airflow-instance
  GCE_INSTANCE_ZONE: us-central1-a

# Jobs that need to be performed 
jobs:

  add_ssh_key_job:
    runs-on: ubuntu-latest  
    steps:

      # Set up SSH access to the GCE VM using the SSH key from GitHub Secrets
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AIRFLOW_GCE_SSH_PRIVATE_KEY }}
      
      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AIRFLOW_VM_USERNAME }}@${{ secrets.AIRFLOW_VM_IP }} << EOF
            echo "
            ############################################################
            "
            echo "Connected to GCE VM successfully!"
            hostname
            uptime
            echo "######################################################"
          EOF


  check_changed_files_and_directories:
    name: Check updated files and directories
    needs: add_ssh_key_job
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.check_changed_directories.outputs.changed_files }}
      changed_folders: ${{ steps.check_changed_directories.outputs.changed_folders }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0
  
      - name: check changed files
        id: list_changed_files  # Step ID to reference output
        run: |
          echo "Finding changed files..."
          # Get the list of changed files
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          
          # Replace newlines with spaces to create a single-line output
          CHANGED_FILES_SINGLE_LINE=$(echo "$CHANGED_FILES" | tr '\n' ' ')
          
          echo "Changed files in single line:"
          echo "$CHANGED_FILES_SINGLE_LINE"
          
          # Set the changed files as an output for the job (single-line output)
          echo "::set-output name=changed_files::$CHANGED_FILES_SINGLE_LINE"

      - name: check changed folders
        id: list_changed_folders
        run: |
          echo "Finding changed directories..."
          # Get the list of changed files
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          
          # Extract directories from changed files, replace newlines with spaces to create a single-line output
          CHANGED_DIRECTORIES=$(echo "$CHANGED_FILES" | xargs -n1 dirname | sort | uniq | tr '\n' ' ')
          
          echo "The following directories contain changes (single-line):"
          echo "$CHANGED_DIRECTORIES"
          
          # Set the changed directories as an output for the job (single-line output)
          echo "::set-output name=changed_directories::$CHANGED_DIRECTORIES"



  # job definition
  airlfow_config_update:
    runs-on: ubuntu-latest
    needs:
      - add_ssh_key_job
      - check_changed_files_and_directories

    if: contains(needs.check_changed_files_and_directories.output.changed_files,'docker-compose.yaml')

    # Sub-processes or steps to run
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cleanup all docker processes
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AIRFLOW_VM_USERNAME }}@${{ secrets.AIRFLOW_VM_IP }} << EOF
            sudo docker compose down --volumes --rmi all
            
          EOF
      - name: Overwrite New docker-compose File
        run: |
          scp -o StrictHostKeyChecking=no /airflow-config/docker-compose.yaml ${{secrets.AIRFLOW_VM_USERNAME}}@${{secrets.AIRFLOW_VM_IP}}:/

          EOF
      - name: Docker Compose Up Commands
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AIRFLOW_VM_USERNAME }}@${{ secrets.AIRFLOW_VM_IP }} << EOF
            sudo docker compose up airflow-init  # Initialize Airflow
            sudo docker compose up -d  # Start the containers in detached mode
          EOF

  airflow_dag_scirpts_update:
    runs-on : ubuntu-latest
    needs:
      - add_ssh_key_job
      - check_changed_files_and_directories

    if: contains(needs.check_changed_files_and_directories.output.changed_directories,'dags/src')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Overwrite The Dag folder
        run: |
          scp -o StrictHostKeyChecking=no /dags/src/ ${{secrets.AIRFLOW_VM_USERNAME}}@${{secrets.AIRFLOW_VM_IP}}:/dags

          EOF